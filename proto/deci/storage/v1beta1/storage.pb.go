// Code generated by protoc-gen-go. DO NOT EDIT.
// source: deci/storage/v1beta1/storage.proto

package storage

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	timestamp "github.com/golang/protobuf/ptypes/timestamp"
	wrappers "github.com/golang/protobuf/ptypes/wrappers"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

// Keys hold encryption and signing keys.
type Keys struct {
	// Key for creating and verifying signatures. These may be nil. They are
	// store a JWK JSON Blobs
	SigningKey    []byte `protobuf:"bytes,1,opt,name=SigningKey,json=signing_key,proto3" json:"SigningKey,omitempty"`
	SigningKeyPub []byte `protobuf:"bytes,2,opt,name=SigningKeyPub,json=signing_key_pub,proto3" json:"SigningKeyPub,omitempty"`
	// Old signing keys which have been rotated but can still be used to validate
	// existing signatures.
	VerificationKeys []*VerificationKey `protobuf:"bytes,3,rep,name=verification_keys,proto3" json:"verification_keys,omitempty"`
	// The next time the signing key will rotate.
	//
	// For caching purposes, implementations MUST NOT update keys before this
	// time.
	NextRotation         *timestamp.Timestamp `protobuf:"bytes,4,opt,name=next_rotation,proto3" json:"next_rotation,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *Keys) Reset()         { *m = Keys{} }
func (m *Keys) String() string { return proto.CompactTextString(m) }
func (*Keys) ProtoMessage()    {}
func (*Keys) Descriptor() ([]byte, []int) {
	return fileDescriptor_651a08c893f87dc2, []int{0}
}

func (m *Keys) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Keys.Unmarshal(m, b)
}
func (m *Keys) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Keys.Marshal(b, m, deterministic)
}
func (m *Keys) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Keys.Merge(m, src)
}
func (m *Keys) XXX_Size() int {
	return xxx_messageInfo_Keys.Size(m)
}
func (m *Keys) XXX_DiscardUnknown() {
	xxx_messageInfo_Keys.DiscardUnknown(m)
}

var xxx_messageInfo_Keys proto.InternalMessageInfo

func (m *Keys) GetSigningKey() []byte {
	if m != nil {
		return m.SigningKey
	}
	return nil
}

func (m *Keys) GetSigningKeyPub() []byte {
	if m != nil {
		return m.SigningKeyPub
	}
	return nil
}

func (m *Keys) GetVerificationKeys() []*VerificationKey {
	if m != nil {
		return m.VerificationKeys
	}
	return nil
}

func (m *Keys) GetNextRotation() *timestamp.Timestamp {
	if m != nil {
		return m.NextRotation
	}
	return nil
}

// VerificationKey is a rotated signing key which can still be used to verify
// signatures.
type VerificationKey struct {
	// Stored as JWK JSON blob
	PublicKey            []byte               `protobuf:"bytes,1,opt,name=public_key,proto3" json:"public_key,omitempty"`
	Expiry               *timestamp.Timestamp `protobuf:"bytes,2,opt,name=expiry,proto3" json:"expiry,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *VerificationKey) Reset()         { *m = VerificationKey{} }
func (m *VerificationKey) String() string { return proto.CompactTextString(m) }
func (*VerificationKey) ProtoMessage()    {}
func (*VerificationKey) Descriptor() ([]byte, []int) {
	return fileDescriptor_651a08c893f87dc2, []int{1}
}

func (m *VerificationKey) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_VerificationKey.Unmarshal(m, b)
}
func (m *VerificationKey) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_VerificationKey.Marshal(b, m, deterministic)
}
func (m *VerificationKey) XXX_Merge(src proto.Message) {
	xxx_messageInfo_VerificationKey.Merge(m, src)
}
func (m *VerificationKey) XXX_Size() int {
	return xxx_messageInfo_VerificationKey.Size(m)
}
func (m *VerificationKey) XXX_DiscardUnknown() {
	xxx_messageInfo_VerificationKey.DiscardUnknown(m)
}

var xxx_messageInfo_VerificationKey proto.InternalMessageInfo

func (m *VerificationKey) GetPublicKey() []byte {
	if m != nil {
		return m.PublicKey
	}
	return nil
}

func (m *VerificationKey) GetExpiry() *timestamp.Timestamp {
	if m != nil {
		return m.Expiry
	}
	return nil
}

// Claims represents the ID Token claims supported by the server.
type Claims struct {
	UserId               string                `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	Username             string                `protobuf:"bytes,2,opt,name=username,proto3" json:"username,omitempty"`
	Email                string                `protobuf:"bytes,3,opt,name=email,proto3" json:"email,omitempty"`
	EmailVerified        bool                  `protobuf:"varint,4,opt,name=email_verified,json=emailVerified,proto3" json:"email_verified,omitempty"`
	Groups               []string              `protobuf:"bytes,5,rep,name=groups,proto3" json:"groups,omitempty"`
	Acr                  *wrappers.StringValue `protobuf:"bytes,6,opt,name=acr,proto3" json:"acr,omitempty"`
	Amr                  []string              `protobuf:"bytes,7,rep,name=amr,proto3" json:"amr,omitempty"`
	XXX_NoUnkeyedLiteral struct{}              `json:"-"`
	XXX_unrecognized     []byte                `json:"-"`
	XXX_sizecache        int32                 `json:"-"`
}

func (m *Claims) Reset()         { *m = Claims{} }
func (m *Claims) String() string { return proto.CompactTextString(m) }
func (*Claims) ProtoMessage()    {}
func (*Claims) Descriptor() ([]byte, []int) {
	return fileDescriptor_651a08c893f87dc2, []int{2}
}

func (m *Claims) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Claims.Unmarshal(m, b)
}
func (m *Claims) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Claims.Marshal(b, m, deterministic)
}
func (m *Claims) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Claims.Merge(m, src)
}
func (m *Claims) XXX_Size() int {
	return xxx_messageInfo_Claims.Size(m)
}
func (m *Claims) XXX_DiscardUnknown() {
	xxx_messageInfo_Claims.DiscardUnknown(m)
}

var xxx_messageInfo_Claims proto.InternalMessageInfo

func (m *Claims) GetUserId() string {
	if m != nil {
		return m.UserId
	}
	return ""
}

func (m *Claims) GetUsername() string {
	if m != nil {
		return m.Username
	}
	return ""
}

func (m *Claims) GetEmail() string {
	if m != nil {
		return m.Email
	}
	return ""
}

func (m *Claims) GetEmailVerified() bool {
	if m != nil {
		return m.EmailVerified
	}
	return false
}

func (m *Claims) GetGroups() []string {
	if m != nil {
		return m.Groups
	}
	return nil
}

func (m *Claims) GetAcr() *wrappers.StringValue {
	if m != nil {
		return m.Acr
	}
	return nil
}

func (m *Claims) GetAmr() []string {
	if m != nil {
		return m.Amr
	}
	return nil
}

type AuthRequest struct {
	// ID used to identify the authorization request.
	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// ID of the client requesting authorization from a user.
	ClientId string `protobuf:"bytes,2,opt,name=client_id,json=clientId,proto3" json:"client_id,omitempty"`
	// Values parsed from the initial request. These describe the resources the
	// client is
	// requesting as well as values describing the form of the response.
	ResponseTypes []string `protobuf:"bytes,3,rep,name=response_types,json=responseTypes,proto3" json:"response_types,omitempty"`
	Scopes        []string `protobuf:"bytes,4,rep,name=scopes,proto3" json:"scopes,omitempty"`
	RedirectUri   string   `protobuf:"bytes,5,opt,name=redirect_uri,json=redirectUri,proto3" json:"redirect_uri,omitempty"`
	Nonce         string   `protobuf:"bytes,6,opt,name=nonce,proto3" json:"nonce,omitempty"`
	State         string   `protobuf:"bytes,7,opt,name=state,proto3" json:"state,omitempty"`
	// OPTIONAL. Requested Authentication Context Class Reference values.
	// Space-separated string that specifies the acr values that the Authorization
	// Server is being requested to use for processing this Authentication
	// Request, with the values appearing in order of preference.
	// https://openid.net/specs/openid-connect-core-1_0.html#AuthRequest
	AcrValues []string `protobuf:"bytes,14,rep,name=acr_values,json=acrValues,proto3" json:"acr_values,omitempty"`
	// The client has indicated that the end user must be shown an approval prompt
	// on all requests. The server cannot cache their initial action for
	// subsequent attempts.
	ForceApprovalPrompt bool                 `protobuf:"varint,8,opt,name=force_approval_prompt,json=forceApprovalPrompt,proto3" json:"force_approval_prompt,omitempty"`
	Expiry              *timestamp.Timestamp `protobuf:"bytes,9,opt,name=expiry,proto3" json:"expiry,omitempty"`
	// Has the user proved their identity through a backing identity provider?
	//
	// If false, the following fields are invalid.
	LoggedIn bool `protobuf:"varint,10,opt,name=loggedIn,proto3" json:"loggedIn,omitempty"`
	// The identity of the end user. Generally nil until the user authenticates
	// with a backend.
	Claims *Claims `protobuf:"bytes,11,opt,name=claims,proto3" json:"claims,omitempty"`
	// The connector used to login the user and any data the connector wishes to
	// persists. Set when the user authenticates.
	ConnectorId string `protobuf:"bytes,12,opt,name=connector_id,json=connectorId,proto3" json:"connector_id,omitempty"`
	// arbitrary connector data. Usually JSON blob
	ConnectorData        []byte   `protobuf:"bytes,13,opt,name=connector_data,json=connectorData,proto3" json:"connector_data,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *AuthRequest) Reset()         { *m = AuthRequest{} }
func (m *AuthRequest) String() string { return proto.CompactTextString(m) }
func (*AuthRequest) ProtoMessage()    {}
func (*AuthRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_651a08c893f87dc2, []int{3}
}

func (m *AuthRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AuthRequest.Unmarshal(m, b)
}
func (m *AuthRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AuthRequest.Marshal(b, m, deterministic)
}
func (m *AuthRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AuthRequest.Merge(m, src)
}
func (m *AuthRequest) XXX_Size() int {
	return xxx_messageInfo_AuthRequest.Size(m)
}
func (m *AuthRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_AuthRequest.DiscardUnknown(m)
}

var xxx_messageInfo_AuthRequest proto.InternalMessageInfo

func (m *AuthRequest) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *AuthRequest) GetClientId() string {
	if m != nil {
		return m.ClientId
	}
	return ""
}

func (m *AuthRequest) GetResponseTypes() []string {
	if m != nil {
		return m.ResponseTypes
	}
	return nil
}

func (m *AuthRequest) GetScopes() []string {
	if m != nil {
		return m.Scopes
	}
	return nil
}

func (m *AuthRequest) GetRedirectUri() string {
	if m != nil {
		return m.RedirectUri
	}
	return ""
}

func (m *AuthRequest) GetNonce() string {
	if m != nil {
		return m.Nonce
	}
	return ""
}

func (m *AuthRequest) GetState() string {
	if m != nil {
		return m.State
	}
	return ""
}

func (m *AuthRequest) GetAcrValues() []string {
	if m != nil {
		return m.AcrValues
	}
	return nil
}

func (m *AuthRequest) GetForceApprovalPrompt() bool {
	if m != nil {
		return m.ForceApprovalPrompt
	}
	return false
}

func (m *AuthRequest) GetExpiry() *timestamp.Timestamp {
	if m != nil {
		return m.Expiry
	}
	return nil
}

func (m *AuthRequest) GetLoggedIn() bool {
	if m != nil {
		return m.LoggedIn
	}
	return false
}

func (m *AuthRequest) GetClaims() *Claims {
	if m != nil {
		return m.Claims
	}
	return nil
}

func (m *AuthRequest) GetConnectorId() string {
	if m != nil {
		return m.ConnectorId
	}
	return ""
}

func (m *AuthRequest) GetConnectorData() []byte {
	if m != nil {
		return m.ConnectorData
	}
	return nil
}

// AuthCode represents a code which can be exchanged for an OAuth2 token
// response.
//
// This value is created once an end user has authorized a client, the server
// has redirect the end user back to the client, but the client hasn't exchanged
// the code for an access_token and id_token.
type AuthCode struct {
	// Actual string returned as the "code" value.
	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// The client this code value is valid for. When exchanging the code for a
	// token response, the client must use its client_secret to authenticate.
	ClientId string `protobuf:"bytes,2,opt,name=client_id,json=clientId,proto3" json:"client_id,omitempty"`
	// As part of the OAuth2 spec when a client makes a token request it MUST
	// present the same redirect_uri as the initial redirect. This values is saved
	// to make this check.
	//
	// https://tools.ietf.org/html/rfc6749#section-4.1.3
	RedirectUri string `protobuf:"bytes,3,opt,name=redirect_uri,json=redirectUri,proto3" json:"redirect_uri,omitempty"`
	// If provided by the client in the initial request, the provider MUST create
	// a ID Token with this nonce in the JWT payload.
	Nonce string `protobuf:"bytes,4,opt,name=nonce,proto3" json:"nonce,omitempty"`
	// Scopes authorized by the end user for the client.
	Scopes []string `protobuf:"bytes,5,rep,name=scopes,proto3" json:"scopes,omitempty"`
	// Authentication data provided by an upstream source.
	ConnectorId          string               `protobuf:"bytes,6,opt,name=connector_id,json=connectorId,proto3" json:"connector_id,omitempty"`
	ConnectorData        []byte               `protobuf:"bytes,7,opt,name=connector_data,json=connectorData,proto3" json:"connector_data,omitempty"`
	Claims               *Claims              `protobuf:"bytes,8,opt,name=claims,proto3" json:"claims,omitempty"`
	Expiry               *timestamp.Timestamp `protobuf:"bytes,9,opt,name=expiry,proto3" json:"expiry,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *AuthCode) Reset()         { *m = AuthCode{} }
func (m *AuthCode) String() string { return proto.CompactTextString(m) }
func (*AuthCode) ProtoMessage()    {}
func (*AuthCode) Descriptor() ([]byte, []int) {
	return fileDescriptor_651a08c893f87dc2, []int{4}
}

func (m *AuthCode) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AuthCode.Unmarshal(m, b)
}
func (m *AuthCode) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AuthCode.Marshal(b, m, deterministic)
}
func (m *AuthCode) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AuthCode.Merge(m, src)
}
func (m *AuthCode) XXX_Size() int {
	return xxx_messageInfo_AuthCode.Size(m)
}
func (m *AuthCode) XXX_DiscardUnknown() {
	xxx_messageInfo_AuthCode.DiscardUnknown(m)
}

var xxx_messageInfo_AuthCode proto.InternalMessageInfo

func (m *AuthCode) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *AuthCode) GetClientId() string {
	if m != nil {
		return m.ClientId
	}
	return ""
}

func (m *AuthCode) GetRedirectUri() string {
	if m != nil {
		return m.RedirectUri
	}
	return ""
}

func (m *AuthCode) GetNonce() string {
	if m != nil {
		return m.Nonce
	}
	return ""
}

func (m *AuthCode) GetScopes() []string {
	if m != nil {
		return m.Scopes
	}
	return nil
}

func (m *AuthCode) GetConnectorId() string {
	if m != nil {
		return m.ConnectorId
	}
	return ""
}

func (m *AuthCode) GetConnectorData() []byte {
	if m != nil {
		return m.ConnectorData
	}
	return nil
}

func (m *AuthCode) GetClaims() *Claims {
	if m != nil {
		return m.Claims
	}
	return nil
}

func (m *AuthCode) GetExpiry() *timestamp.Timestamp {
	if m != nil {
		return m.Expiry
	}
	return nil
}

// RefreshToken is an OAuth2 refresh token which allows a client to request new
// tokens on the end user's behalf.
type RefreshToken struct {
	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// A single token that's rotated every time the refresh token is refreshed.
	//
	// May be empty.
	Token     string               `protobuf:"bytes,2,opt,name=token,proto3" json:"token,omitempty"`
	CreatedAt *timestamp.Timestamp `protobuf:"bytes,3,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	LastUsed  *timestamp.Timestamp `protobuf:"bytes,4,opt,name=last_used,json=lastUsed,proto3" json:"last_used,omitempty"`
	// Client this refresh token is valid for.
	ClientId string `protobuf:"bytes,5,opt,name=client_id,json=clientId,proto3" json:"client_id,omitempty"`
	// Authentication data provided by an upstream source.
	ConnectorId   string  `protobuf:"bytes,6,opt,name=connector_id,json=connectorId,proto3" json:"connector_id,omitempty"`
	ConnectorData []byte  `protobuf:"bytes,7,opt,name=connector_data,json=connectorData,proto3" json:"connector_data,omitempty"`
	Claims        *Claims `protobuf:"bytes,8,opt,name=claims,proto3" json:"claims,omitempty"`
	// Scopes present in the initial request. Refresh requests may specify a set
	// of scopes different from the initial request when refreshing a token,
	// however those scopes must be encompassed by this set.
	Scopes []string `protobuf:"bytes,9,rep,name=scopes,proto3" json:"scopes,omitempty"`
	// Nonce value supplied during the initial redirect. This is required to be
	// part of the claims of any future id_token generated by the client.
	Nonce                string   `protobuf:"bytes,10,opt,name=nonce,proto3" json:"nonce,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RefreshToken) Reset()         { *m = RefreshToken{} }
func (m *RefreshToken) String() string { return proto.CompactTextString(m) }
func (*RefreshToken) ProtoMessage()    {}
func (*RefreshToken) Descriptor() ([]byte, []int) {
	return fileDescriptor_651a08c893f87dc2, []int{5}
}

func (m *RefreshToken) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RefreshToken.Unmarshal(m, b)
}
func (m *RefreshToken) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RefreshToken.Marshal(b, m, deterministic)
}
func (m *RefreshToken) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RefreshToken.Merge(m, src)
}
func (m *RefreshToken) XXX_Size() int {
	return xxx_messageInfo_RefreshToken.Size(m)
}
func (m *RefreshToken) XXX_DiscardUnknown() {
	xxx_messageInfo_RefreshToken.DiscardUnknown(m)
}

var xxx_messageInfo_RefreshToken proto.InternalMessageInfo

func (m *RefreshToken) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *RefreshToken) GetToken() string {
	if m != nil {
		return m.Token
	}
	return ""
}

func (m *RefreshToken) GetCreatedAt() *timestamp.Timestamp {
	if m != nil {
		return m.CreatedAt
	}
	return nil
}

func (m *RefreshToken) GetLastUsed() *timestamp.Timestamp {
	if m != nil {
		return m.LastUsed
	}
	return nil
}

func (m *RefreshToken) GetClientId() string {
	if m != nil {
		return m.ClientId
	}
	return ""
}

func (m *RefreshToken) GetConnectorId() string {
	if m != nil {
		return m.ConnectorId
	}
	return ""
}

func (m *RefreshToken) GetConnectorData() []byte {
	if m != nil {
		return m.ConnectorData
	}
	return nil
}

func (m *RefreshToken) GetClaims() *Claims {
	if m != nil {
		return m.Claims
	}
	return nil
}

func (m *RefreshToken) GetScopes() []string {
	if m != nil {
		return m.Scopes
	}
	return nil
}

func (m *RefreshToken) GetNonce() string {
	if m != nil {
		return m.Nonce
	}
	return ""
}

type RefreshTokenRef struct {
	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// Client the refresh token is valid for.
	ClientId             string               `protobuf:"bytes,2,opt,name=client_id,json=clientId,proto3" json:"client_id,omitempty"`
	CreatedAt            *timestamp.Timestamp `protobuf:"bytes,3,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	LastUsed             *timestamp.Timestamp `protobuf:"bytes,4,opt,name=last_used,json=lastUsed,proto3" json:"last_used,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *RefreshTokenRef) Reset()         { *m = RefreshTokenRef{} }
func (m *RefreshTokenRef) String() string { return proto.CompactTextString(m) }
func (*RefreshTokenRef) ProtoMessage()    {}
func (*RefreshTokenRef) Descriptor() ([]byte, []int) {
	return fileDescriptor_651a08c893f87dc2, []int{6}
}

func (m *RefreshTokenRef) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RefreshTokenRef.Unmarshal(m, b)
}
func (m *RefreshTokenRef) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RefreshTokenRef.Marshal(b, m, deterministic)
}
func (m *RefreshTokenRef) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RefreshTokenRef.Merge(m, src)
}
func (m *RefreshTokenRef) XXX_Size() int {
	return xxx_messageInfo_RefreshTokenRef.Size(m)
}
func (m *RefreshTokenRef) XXX_DiscardUnknown() {
	xxx_messageInfo_RefreshTokenRef.DiscardUnknown(m)
}

var xxx_messageInfo_RefreshTokenRef proto.InternalMessageInfo

func (m *RefreshTokenRef) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *RefreshTokenRef) GetClientId() string {
	if m != nil {
		return m.ClientId
	}
	return ""
}

func (m *RefreshTokenRef) GetCreatedAt() *timestamp.Timestamp {
	if m != nil {
		return m.CreatedAt
	}
	return nil
}

func (m *RefreshTokenRef) GetLastUsed() *timestamp.Timestamp {
	if m != nil {
		return m.LastUsed
	}
	return nil
}

// OfflineSessions objects are sessions pertaining to users with refresh tokens.
type OfflineSessions struct {
	// UserID of an end user who has logged in to the server.
	UserId string `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	// The ID of the connector used to login the user.
	ConnId string `protobuf:"bytes,2,opt,name=conn_id,json=connId,proto3" json:"conn_id,omitempty"`
	// Refresh is a hash table of refresh token reference objects
	// indexed by the ClientID of the refresh token.
	Refresh              map[string]*RefreshTokenRef `protobuf:"bytes,3,rep,name=refresh,proto3" json:"refresh,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	XXX_NoUnkeyedLiteral struct{}                    `json:"-"`
	XXX_unrecognized     []byte                      `json:"-"`
	XXX_sizecache        int32                       `json:"-"`
}

func (m *OfflineSessions) Reset()         { *m = OfflineSessions{} }
func (m *OfflineSessions) String() string { return proto.CompactTextString(m) }
func (*OfflineSessions) ProtoMessage()    {}
func (*OfflineSessions) Descriptor() ([]byte, []int) {
	return fileDescriptor_651a08c893f87dc2, []int{7}
}

func (m *OfflineSessions) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_OfflineSessions.Unmarshal(m, b)
}
func (m *OfflineSessions) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_OfflineSessions.Marshal(b, m, deterministic)
}
func (m *OfflineSessions) XXX_Merge(src proto.Message) {
	xxx_messageInfo_OfflineSessions.Merge(m, src)
}
func (m *OfflineSessions) XXX_Size() int {
	return xxx_messageInfo_OfflineSessions.Size(m)
}
func (m *OfflineSessions) XXX_DiscardUnknown() {
	xxx_messageInfo_OfflineSessions.DiscardUnknown(m)
}

var xxx_messageInfo_OfflineSessions proto.InternalMessageInfo

func (m *OfflineSessions) GetUserId() string {
	if m != nil {
		return m.UserId
	}
	return ""
}

func (m *OfflineSessions) GetConnId() string {
	if m != nil {
		return m.ConnId
	}
	return ""
}

func (m *OfflineSessions) GetRefresh() map[string]*RefreshTokenRef {
	if m != nil {
		return m.Refresh
	}
	return nil
}

func init() {
	proto.RegisterType((*Keys)(nil), "deci.storage.v1beta1.Keys")
	proto.RegisterType((*VerificationKey)(nil), "deci.storage.v1beta1.VerificationKey")
	proto.RegisterType((*Claims)(nil), "deci.storage.v1beta1.Claims")
	proto.RegisterType((*AuthRequest)(nil), "deci.storage.v1beta1.AuthRequest")
	proto.RegisterType((*AuthCode)(nil), "deci.storage.v1beta1.AuthCode")
	proto.RegisterType((*RefreshToken)(nil), "deci.storage.v1beta1.RefreshToken")
	proto.RegisterType((*RefreshTokenRef)(nil), "deci.storage.v1beta1.RefreshTokenRef")
	proto.RegisterType((*OfflineSessions)(nil), "deci.storage.v1beta1.OfflineSessions")
	proto.RegisterMapType((map[string]*RefreshTokenRef)(nil), "deci.storage.v1beta1.OfflineSessions.RefreshEntry")
}

func init() { proto.RegisterFile("deci/storage/v1beta1/storage.proto", fileDescriptor_651a08c893f87dc2) }

var fileDescriptor_651a08c893f87dc2 = []byte{
	// 880 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xc4, 0x56, 0x41, 0x73, 0xe3, 0x34,
	0x14, 0x9e, 0x24, 0x8d, 0x13, 0xbf, 0x34, 0x2d, 0x88, 0xc2, 0x7a, 0x02, 0xec, 0x16, 0xcf, 0x2c,
	0xd3, 0x93, 0x33, 0x1b, 0x98, 0x81, 0xa5, 0x17, 0xca, 0xc2, 0xa1, 0x53, 0x66, 0xd8, 0x71, 0xbb,
	0x3d, 0x70, 0xf1, 0x28, 0xf6, 0x8b, 0xab, 0x59, 0x47, 0x32, 0x92, 0x5c, 0x36, 0x7f, 0x8b, 0x33,
	0x3f, 0x83, 0xdf, 0xc0, 0x85, 0x23, 0xfc, 0x00, 0x46, 0x92, 0x93, 0xb8, 0x69, 0xc8, 0x6c, 0xb9,
	0xec, 0x4d, 0xef, 0x7b, 0x9f, 0xf4, 0xf4, 0x7d, 0xef, 0x25, 0x32, 0x84, 0x19, 0xa6, 0x6c, 0xac,
	0xb4, 0x90, 0x34, 0xc7, 0xf1, 0xed, 0xb3, 0x29, 0x6a, 0xfa, 0x6c, 0x19, 0x47, 0xa5, 0x14, 0x5a,
	0x90, 0x23, 0xc3, 0x89, 0x96, 0x58, 0xcd, 0x19, 0x3d, 0xc9, 0x85, 0xc8, 0x0b, 0x1c, 0x5b, 0xce,
	0xb4, 0x9a, 0x8d, 0x35, 0x9b, 0xa3, 0xd2, 0x74, 0x5e, 0xba, 0x6d, 0xa3, 0xc7, 0x9b, 0x84, 0x5f,
	0x25, 0x2d, 0x4b, 0x94, 0xca, 0xe5, 0xc3, 0x3f, 0x5b, 0xb0, 0x77, 0x81, 0x0b, 0x45, 0x9e, 0x00,
	0x5c, 0xb2, 0x9c, 0x33, 0x9e, 0x5f, 0xe0, 0x22, 0x68, 0x1d, 0xb7, 0x4e, 0xf6, 0xe3, 0x81, 0x72,
	0x48, 0xf2, 0x1a, 0x17, 0xe4, 0x73, 0x18, 0xae, 0x09, 0x2f, 0xab, 0x69, 0xd0, 0xb6, 0x9c, 0xc3,
	0x06, 0x27, 0x29, 0xab, 0x29, 0xb9, 0x84, 0xf7, 0x6f, 0x51, 0xb2, 0x19, 0x4b, 0xa9, 0x66, 0x82,
	0x1b, 0x5c, 0x05, 0x9d, 0xe3, 0xce, 0xc9, 0x60, 0xf2, 0x34, 0xda, 0x26, 0x22, 0xba, 0x6e, 0xd0,
	0x2f, 0x70, 0x11, 0xdf, 0xdf, 0x4f, 0xbe, 0x85, 0x21, 0xc7, 0x37, 0x3a, 0x91, 0x42, 0x5b, 0x34,
	0xd8, 0x3b, 0x6e, 0x9d, 0x0c, 0x26, 0xa3, 0xc8, 0xc9, 0x8b, 0x96, 0xf2, 0xa2, 0xab, 0xa5, 0xfe,
	0xf8, 0xee, 0x86, 0x10, 0xe1, 0x70, 0xa3, 0x0e, 0x79, 0x0c, 0x50, 0x56, 0xd3, 0x82, 0xa5, 0xa6,
	0x46, 0x2d, 0xb9, 0x81, 0x90, 0x09, 0x78, 0xf8, 0xa6, 0x64, 0x72, 0x61, 0xa5, 0xee, 0xae, 0x56,
	0x33, 0xc3, 0x3f, 0x5a, 0xe0, 0xbd, 0x28, 0x28, 0x9b, 0x2b, 0xf2, 0x08, 0x7a, 0x95, 0x42, 0x99,
	0xb0, 0xcc, 0x9e, 0xed, 0xc7, 0x9e, 0x09, 0xcf, 0x33, 0x32, 0x82, 0xbe, 0x59, 0x71, 0x3a, 0x47,
	0x7b, 0xb2, 0x1f, 0xaf, 0x62, 0x72, 0x04, 0x5d, 0x9c, 0x53, 0x56, 0x04, 0x1d, 0x9b, 0x70, 0x01,
	0x79, 0x0a, 0x07, 0x76, 0x91, 0x38, 0x67, 0x30, 0xb3, 0xfa, 0xfb, 0xf1, 0xd0, 0xa2, 0xd7, 0x35,
	0x48, 0x3e, 0x02, 0x2f, 0x97, 0xa2, 0x2a, 0x55, 0xd0, 0x3d, 0xee, 0x98, 0x82, 0x2e, 0x22, 0x11,
	0x74, 0x68, 0x2a, 0x03, 0xcf, 0xaa, 0xf8, 0xe4, 0x9e, 0x8a, 0x4b, 0x2d, 0x19, 0xcf, 0xaf, 0x69,
	0x51, 0x61, 0x6c, 0x88, 0xe4, 0x3d, 0xe8, 0xd0, 0xb9, 0x0c, 0x7a, 0xf6, 0x10, 0xb3, 0x0c, 0xff,
	0xea, 0xc0, 0xe0, 0xac, 0xd2, 0x37, 0x31, 0xfe, 0x52, 0xa1, 0xd2, 0xe4, 0x00, 0xda, 0x2b, 0x59,
	0x6d, 0x96, 0x91, 0x8f, 0xc1, 0x4f, 0x0b, 0x86, 0x5c, 0x1b, 0xb5, 0xb5, 0x26, 0x07, 0x9c, 0x67,
	0xe6, 0xf6, 0x12, 0x55, 0x29, 0xb8, 0xc2, 0x44, 0x2f, 0x4a, 0x74, 0xe3, 0xe0, 0xc7, 0xc3, 0x25,
	0x7a, 0x65, 0x40, 0x73, 0x7b, 0x95, 0x0a, 0x93, 0xde, 0x73, 0xb7, 0x77, 0x11, 0xf9, 0x0c, 0xf6,
	0x25, 0x66, 0x4c, 0x62, 0xaa, 0x93, 0x4a, 0xb2, 0xa0, 0x6b, 0x8f, 0x1f, 0x2c, 0xb1, 0x57, 0x92,
	0x19, 0xd7, 0xb8, 0xe0, 0x29, 0x5a, 0x89, 0x7e, 0xec, 0x02, 0x83, 0x2a, 0x4d, 0x35, 0x06, 0x3d,
	0x87, 0xda, 0x80, 0x7c, 0x0a, 0x40, 0x53, 0x99, 0xdc, 0x1a, 0xb9, 0x2a, 0x38, 0xb0, 0xa5, 0x7c,
	0x9a, 0x4a, 0xab, 0x5f, 0x91, 0x09, 0x7c, 0x38, 0x13, 0x32, 0xc5, 0x84, 0x96, 0xa5, 0x14, 0xb7,
	0xb4, 0x48, 0x4a, 0x29, 0xe6, 0xa5, 0x0e, 0xfa, 0xd6, 0xf1, 0x0f, 0x6c, 0xf2, 0xac, 0xce, 0xbd,
	0xb4, 0xa9, 0xc6, 0xa0, 0xf8, 0x6f, 0x3b, 0x28, 0x66, 0x08, 0x0a, 0x91, 0xe7, 0x98, 0x9d, 0xf3,
	0x00, 0xec, 0xd1, 0xab, 0x98, 0x7c, 0x09, 0x5e, 0x6a, 0x67, 0x28, 0x18, 0xd4, 0x2d, 0xdb, 0xfa,
	0xbb, 0x71, 0x73, 0x16, 0xd7, 0x5c, 0xe3, 0x53, 0x2a, 0x38, 0xc7, 0x54, 0x0b, 0x3b, 0x74, 0xfb,
	0xce, 0xa7, 0x15, 0xe6, 0x3a, 0xb1, 0xa6, 0x64, 0x54, 0xd3, 0x60, 0x68, 0xa7, 0x7e, 0xb8, 0x42,
	0xbf, 0xa7, 0x9a, 0x86, 0xbf, 0xb7, 0xa1, 0x6f, 0xba, 0xfd, 0x42, 0x64, 0xf8, 0xb0, 0x56, 0x6f,
	0xf6, 0xaa, 0xb3, 0xa3, 0x57, 0x7b, 0xcd, 0x5e, 0xad, 0x9b, 0xdf, 0xdd, 0x6c, 0xfe, 0x1d, 0x51,
	0xde, 0xdb, 0x88, 0xea, 0x6d, 0x11, 0xd5, 0x30, 0xb5, 0xff, 0x00, 0x53, 0xff, 0x47, 0x6b, 0xc3,
	0xbf, 0xdb, 0xb0, 0x1f, 0xe3, 0x4c, 0xa2, 0xba, 0xb9, 0x12, 0xaf, 0x91, 0xdf, 0xb3, 0xf0, 0x08,
	0xba, 0xda, 0x24, 0x6a, 0xfb, 0x5c, 0x40, 0x9e, 0x03, 0xa4, 0x12, 0xa9, 0xc6, 0x2c, 0xa1, 0xda,
	0x3a, 0xb7, 0xbb, 0x9c, 0x5f, 0xb3, 0xcf, 0x34, 0xf9, 0x0a, 0xfc, 0x82, 0x2a, 0x9d, 0x54, 0xaa,
	0xfe, 0x6b, 0xd8, 0xbd, 0xb3, 0x6f, 0xc8, 0xaf, 0x14, 0x6e, 0x34, 0xb3, 0x7b, 0xbf, 0x99, 0xef,
	0xd4, 0xfb, 0xf5, 0x4c, 0xf8, 0x77, 0x66, 0x62, 0x35, 0x41, 0xd0, 0x98, 0xa0, 0xf0, 0xb7, 0x16,
	0x1c, 0x36, 0x5d, 0x8f, 0x71, 0xf6, 0xb0, 0xd9, 0x7d, 0x07, 0xfe, 0x87, 0xff, 0xb4, 0xe0, 0xf0,
	0xa7, 0xd9, 0xac, 0x60, 0x1c, 0x2f, 0x51, 0x29, 0x26, 0xf8, 0x8e, 0x77, 0xe3, 0x11, 0xf4, 0x8c,
	0xad, 0xeb, 0xbb, 0x7b, 0x26, 0x3c, 0xcf, 0xc8, 0x8f, 0xd0, 0x93, 0x4e, 0x79, 0xfd, 0xd0, 0x4e,
	0xb6, 0xfb, 0xbb, 0x51, 0x29, 0xaa, 0xed, 0xfa, 0x81, 0x6b, 0xb9, 0x88, 0x97, 0x47, 0x8c, 0xe8,
	0x6a, 0x7a, 0x6d, 0xc2, 0xbc, 0x06, 0xcb, 0xf7, 0xd1, 0x8f, 0xcd, 0x92, 0x9c, 0x42, 0xd7, 0xfe,
	0x7d, 0xd6, 0xef, 0xe2, 0x7f, 0x3c, 0xeb, 0x1b, 0xcd, 0x88, 0xdd, 0x9e, 0x6f, 0xda, 0x5f, 0xb7,
	0xbe, 0x3b, 0xfd, 0xf9, 0x79, 0xce, 0xf4, 0x4d, 0x35, 0x8d, 0x52, 0x31, 0x1f, 0x97, 0x54, 0x66,
	0x42, 0x8f, 0xed, 0x47, 0x90, 0x75, 0x6b, 0xbc, 0xed, 0x7b, 0xe8, 0xb4, 0x8e, 0xa7, 0x9e, 0xe5,
	0x7c, 0xf1, 0x6f, 0x00, 0x00, 0x00, 0xff, 0xff, 0x4a, 0xb6, 0xe0, 0xf0, 0x36, 0x09, 0x00, 0x00,
}
